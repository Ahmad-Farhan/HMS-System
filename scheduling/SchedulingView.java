package scheduling;

import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;

import java.util.ArrayList;

import application.Navigation;
import javafx.event.ActionEvent;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.layout.Pane;
import javafx.scene.control.Alert.AlertType;
import users.User;

public class SchedulingView {
	@FXML private ComboBox comboBox1;
	@FXML private ComboBox comboBox2;
	@FXML private ComboBox comboBox3;
	@FXML private ComboBox comboBox4;
	@FXML private Button button1;
	@FXML private Button button2;
	@FXML private Label scheduledAppointmentText;
	@FXML private Button button3;
	@FXML private ComboBox comboBox5;
	@FXML private ComboBox comboBox6;
	@FXML private ComboBox comboBox7;
	@FXML private Button button4;
	@FXML private Pane mainpanel;


	private SchedulingHandler scheduling;
	private String doctor;
	private String interval;
	private String date;
	private final int patient_id;


	private String appointment;
	private String rescheduleDoctor;
	private String rescheduleDate;
	private String rescheduleInterval;

	public SchedulingView(User user){
		patient_id = user.getId();
		scheduling = new SchedulingHandler(user);
	}

	public void initialize()
	{
		comboBox1.getItems().addAll(scheduling.getSpecialization());
		comboBox3.getItems().addAll(scheduling.getDate());
		comboBox5.getItems().addAll(scheduling.getScheduledAppointments());
		comboBox6.getItems().addAll(scheduling.getDate());
     	mainpanel.setPrefHeight(1210);
	}
	@FXML public void redirectToLogout() {
		Navigation.self().loadloginView();
	}
	@FXML public void redirectToMedicalHistory() {
		Navigation.self().loadMedicalHistoryView(patient_id);;
	}
	
	
	@FXML
	public void specialityComboBox(ActionEvent event) {
		// TODO Autogenerated
		
		String specialization = (String) comboBox1.getValue();
        if (specialization != null) {
        	comboBox2.getItems().clear();
            comboBox2.getItems().addAll(scheduling.getDoctor(specialization));
        }
		
	}
	// Event Listener on ComboBox[#comboBox2].onAction
	@FXML
	public void DoctorComboBox(ActionEvent event) {
		// TODO Autogenerated
		
		String Doctor = (String) comboBox2.getValue();
		
		if(Doctor != null)
		{
			doctor = Doctor;
		}
		
	}
	
	public void DateComboBox(ActionEvent event) {
		// TODO Autogenerated
		String DateDay = (String) comboBox3.getValue();
		
		if(DateDay != null)
		{
			String tempdate = "", tempday = "";
			
			int index = 0;
			
			for(int i = 0; i < DateDay.length(); i++)
			{
				if(DateDay.charAt(i) != ' ')
				{
					tempdate += DateDay.charAt(i);
				}
				else
				{
					index = i + 1;
					break;
				}
			}
			
			for(int i = index; i < DateDay.length(); i++)
			{
				if(DateDay.charAt(i) != '(' && DateDay.charAt(i) != ')')
				{
					tempday += DateDay.charAt(i);
				}
			}
			
			String day = tempday.toLowerCase();
			date = tempdate;
			
			if(comboBox2.getValue() != null)
			{

				comboBox4.getItems().clear();
	            comboBox4.getItems().addAll(scheduling.getScheduleInfo(tempdate, day, doctor));
			}
			
		}
		
	}
	// Event Listener on ComboBox[#comboBox3].onAction
		@FXML
		public void IntervalComboBox(ActionEvent event) {
			// TODO Autogenerated
			
			String value = (String) comboBox4.getValue();
			//System.out.println(value);
			interval = value;
			
		}
	// Event Listener on Button[#button1].onAction
	@FXML
	public void submitButtonClicked(ActionEvent event) {
		// TODO Autogenerated
		
		if(comboBox1.getValue() == null || comboBox2.getValue() == null
				|| comboBox3.getValue() == null || comboBox4.getValue() == null)
		{
			Alert alert = new Alert(AlertType.INFORMATION);
	        alert.setTitle("Error");
	        alert.setHeaderText(null);
	        alert.setContentText("Select All Fields!");
	        
	        alert.showAndWait();
			
			return;
		}
		
		boolean res = scheduling.BookSlot(interval, doctor, date);
		
		if(res == true)
		{
			Alert alert = new Alert(AlertType.INFORMATION);
	        alert.setTitle("Success");
	        alert.setHeaderText(null);
	        alert.setContentText("Appointment Successfully Scheduled!");
	        
	        alert.showAndWait();
	        
	        comboBox1.setValue(null);
	        comboBox2.setValue(null);
	        comboBox3.setValue(null);
	        comboBox4.setValue(null);
		}
		else
		{
			Alert alert = new Alert(AlertType.INFORMATION);
	        alert.setTitle("Failure");
	        alert.setHeaderText(null);
	        alert.setContentText("Appointment not Scheduled!");
	        
	        alert.showAndWait();
	        
	        comboBox1.setValue(null);
	        comboBox2.setValue(null);
	        comboBox3.setValue(null);
	        comboBox4.setValue(null);
		}
		
		comboBox5.getItems().clear();
		comboBox5.getItems().addAll(scheduling.getScheduledAppointments());
	}
	
	@FXML
	public void GetAppointmentsButton(ActionEvent event) {
		
		ArrayList<String> appointmentlist = scheduling.getScheduledAppointments();
		
		String appointments = String.join("\n", appointmentlist);
		
		scheduledAppointmentText.setText(appointments);
	}
	
	
	@FXML
	public void CancelComboBox(ActionEvent event) {
		String tempappointment = (String) comboBox5.getValue();
		
		if(tempappointment != null)
		{
			appointment = tempappointment;
		}
		
	}
	
	@FXML
	public void cancelAppointmentButton(ActionEvent event) {
		if(appointment == null)
		{
			Alert alert = new Alert(AlertType.INFORMATION);
	        alert.setTitle("Error");
	        alert.setHeaderText(null);
	        alert.setContentText("Choose Appointment!");
	        
	        alert.showAndWait();
			return;
		}
		
		//System.out.println(appointment);
		
		boolean res = scheduling.cancelAppointment(appointment);
		
		if(res == true)
		{
			Alert alert = new Alert(AlertType.INFORMATION);
	        alert.setTitle("Success");
	        alert.setHeaderText(null);
	        alert.setContentText("Appointment Cancelled!");
	        
	        alert.showAndWait();
	        
		}
		else
		{
			Alert alert = new Alert(AlertType.INFORMATION);
	        alert.setTitle("Failure");
	        alert.setHeaderText(null);
	        alert.setContentText("Appointment not Cancelled!");
	        
	        alert.showAndWait();
		}
		
		//comboBox5.setValue(null);
		comboBox5.getItems().clear();
		comboBox5.getItems().addAll(scheduling.getScheduledAppointments());
	}
	
	@FXML
	public void DateCancelComboBox(ActionEvent event)
	{
		String DateDay = (String) comboBox6.getValue();
				
		if(DateDay != null)
		{
			String tempdate = "", tempday = "";
			
			int index = 0;
			
			for(int i = 0; i < DateDay.length(); i++)
			{
				if(DateDay.charAt(i) != ' ')
				{
					tempdate += DateDay.charAt(i);
				}
				else
				{
					index = i + 1;
					break;
				}
			}
			
			for(int i = index; i < DateDay.length(); i++)
			{
				if(DateDay.charAt(i) != '(' && DateDay.charAt(i) != ')')
				{
					tempday += DateDay.charAt(i);
				}
			}
			
			String day = tempday.toLowerCase();
			rescheduleDate = tempdate;
			
			if(appointment != null)
			{
				//System.out.println(appointment);
				
				String tempappointmentid = "";
				
				
				for(int i = 0; i < appointment.length(); i++)
				{
					if(appointment.charAt(i) != ' ')
					{
						tempappointmentid += appointment.charAt(i);
					}
					else
					{
						break;
					}
				}

				// get actual doc name
				String doctor_id = scheduling.getDoctorInfo(tempappointmentid);			
				rescheduleDoctor = doctor_id;

				
				comboBox7.getItems().clear();
	            comboBox7.getItems().addAll(scheduling.getScheduleInfoRaw(tempdate, day, doctor_id));
			}
			
		}
	}
	
	@FXML
	public void IntervalCancelComboBox(ActionEvent event)
	{
		String value = (String) comboBox7.getValue();
		//System.out.println(value);
		if(value != null)
		{
			rescheduleInterval = value;
		}
		
	}
	
	@FXML
	public void RescheduleAppointmentButton(ActionEvent event) 
	{
		if(appointment == null ||comboBox6.getValue() == null || 
				comboBox7.getValue() == null)
		{
			Alert alert = new Alert(AlertType.INFORMATION);
	        alert.setTitle("Error");
	        alert.setHeaderText(null);
	        alert.setContentText("Select All Fields!");
	        
	        alert.showAndWait();
			
			return;
		}
		
		Boolean res2 = scheduling.cancelAppointment(appointment);
		
		boolean res = scheduling.BookSlotRaw(rescheduleInterval, rescheduleDoctor, rescheduleDate);
		
		if(res == true && res2 == true)
		{
			Alert alert = new Alert(AlertType.INFORMATION);
	        alert.setTitle("Success");
	        alert.setHeaderText(null);
	        alert.setContentText("Appointment Successfully Scheduled!");
	        
	        alert.showAndWait();
	        comboBox5.setValue(null);
	        comboBox6.setValue(null);
	        comboBox7.setValue(null);
		}
		else
		{
			Alert alert = new Alert(AlertType.INFORMATION);
	        alert.setTitle("Failure");
	        alert.setHeaderText(null);
	        alert.setContentText("Appointment not Scheduled!");
	        
	        alert.showAndWait();
	        
	        comboBox5.setValue(null);
	        comboBox6.setValue(null);
	        comboBox7.setValue(null);
		}
		
		comboBox5.getItems().clear();
		comboBox5.getItems().addAll(scheduling.getScheduledAppointments());
	}

}
